<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extensible="true" description="A tab that is rendered by the ui:tabBar component">
    <aura:attribute name="class" type="String" description="The class to apply to the tab item"/>
    <aura:attribute name="title" type="String" description="The text to display on the tab."/>
    <aura:attribute name="name"  type="String" description="The internal name of the tab that can be referenced to."/>
    <aura:attribute name="icon" type="Aura.Component[]" description="The graphical image displayed on the tab."/>
    <aura:attribute name="active" type="Boolean" description="Specifies whether a tab is active (true) or not (false)."/>
    <aura:attribute name="hidden" type="Boolean" description="Specifies whether a tab is hidden (true) or not (false)."/>
    <aura:attribute name="iconClass" type="String" description="The CSS style used to display the icon on the tab."/>
    <aura:attribute name="closable" type="Boolean" default="false" description="Specifies whether to display an 'x' to close the tab" />
    <aura:attribute name="ariaControlId" type="String" description="Internal use for aria-controls attribute."/>

    <aura:registerevent name="onActivate"   type="ui:tabsetEvent" />
    <aura:registerevent name="onClose"      type="ui:tabsetEvent" />
    <aura:registerevent name="onTabHover"   type="ui:onTabHover" />
    <aura:registerevent name="onTabUnhover" type="ui:onTabHover" />

    <aura:method name="setActive" action="{!c.setActive}" description="Set the tab item to active or inactive">
        <aura:attribute name="active" type="Boolean" description="Indicates the tab is active or not."/>
        <aura:attribute name="focus" type="Boolean" description="Indicates the tab item should be focused or not."/>
        <aura:attribute name="callback" type="Object" description="Callback function"/>
    </aura:method>
    
    <aura:locator target="tabItemAnchor" alias="tab" isPrimitive="true" description="Tab">
    	<aura:locatorContext key="devNameOrId" value="{!v.name}" />
    </aura:locator>
    
    <li aura:id="li" class="{!v.class + ' tabs__item' + (v.active ? ' active' : '') + (v.hidden ? ' hidden' : '')}"  role="presentation">

        <!-- 
            PROGRAMATIC ATTACHMENTS:

            onmouseover="{!c.onTabHover}"
            onmouseout="{!c.onTabUnhover}" 
            onfocus="{!c.onTabHover}" 
            onblur="{!c.onTabUnhover}"
        -->

        <a  aura:id="tabItemAnchor"
            class="tabHeader"
            data-tab-name="{!v.name||v.title}"
           
            title="{!v.title}"
            aria-controls="{!v.ariaControlId}"
            aria-selected="{!v.active ? 'true' : 'false'}"
            tabindex="{!v.active ? 0: -1}" 
            role="tab"
            onclick="{!c.press}">

            <span class="{!v.iconClass}">{!v.icon}</span>
            <span class="title">{!v.title}</span>

            <aura:if isTrue="{!v.closable}">
                <a  aura:id="close" 
                    class="close" 
                    
                    onclick="{!c.close}" 
                    tabindex="{!v.active ? 0: -1}">&times;
                    <span class="assistiveText">Close</span>
                </a>
            </aura:if>
        </a>
    </li>

</aura:component>
