<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:documentation> 
    <aura:description>
        <p>A <code>ui:scrollerWrapper</code> creates a container that enables native scrolling in Salesforce1. This component enables you to nest more than one scroller inside the container.
        To enable scrolling, specify a height that's smaller than its content using the <code>height</code> attribute.</p>
        <p>This example creates an outer scrollable area with a height of 300px and an inner scrollable area with a height of 200px.</p>
        <pre>&lt;aura:component>
    &lt;aura:attribute name="content" type="String" default="This is a sentence that goes on and on and on..."/>        
    &lt;ui:scrollerWrapper aura:id="outer" height="300px">
        {!v.content}
        &lt;ui:scrollerWrapper aura:id="inner" height="200px">
            {!v.content}
        &lt;/ui:scrollerWrapper>
    &lt;/ui:scrollerWrapper>
    
    &lt;ui:button press="{!c.scrollToTop}" label="Scroll" />
&lt;/aura:component></pre>
        <p>The button in the example calls the following client-side controller to scroll to the top of the content.</p>
        <pre>({
    scrollToTop: function(cmp, event, helper) {
        var outer = cmp.find("outer");
        outer.scrollTo("top");
    }
})</pre>
        <p>The Lightning Design System <code>scrollable</code> class isn't compatible with native scrolling on mobile devices. Use <code>ui:scrollerWrapper</code> if you want to enable scrolling in Salesforce1.</p>
          
        <h4>Usage Considerations</h4>
        <p>In Google Chrome on mobile devices, nested <code>ui:scrollerWrapper</code> components are not scrollable when <code>border-radius</code> CSS property is set to a non-zero value.
        To enable scrolling in this case, set <code>border-radius</code> to a non-zero value on the outer <code>ui:scrollerWrapper</code> component.</p>
        <p>Here is an example.</p>
        <pre>&lt;aura:component>
    &lt;ui:scrollerWrapper class="outerScroller">
        &lt;!-- Scrollable content here -->
        &lt;ui:scrollerWrapper class="innerScroller">
            &lt;!-- Scrollable content here -->
        &lt;/ui:scrollerWrapper>
        &lt;!-- Scrollable content here -->
    &lt;/ui:scrollerWrapper>
&lt;/aura:component>

/** CSS **/
.THIS.outerScroller {
    /* fix innerScroller not scrollable */
    border-radius: 1px;
}
.THIS.innerScroller {
    /* make innerScroller rounded */
    border-radius: 10px;
}</pre>
        <h4>Methods</h4>
        <p>This component supports the following method.</p>
        <p><code>scrollTo(destination, xcoord, ycoord)</code>: Scrolls the content to a specified location.</p>
        <ul>
            <li><code>destination</code> (String): The target location. Valid values: custom, top, bottom, left, and right. For custom destination, xcoord and ycoord are used to determine the target location.</li>
            <li><code>xcoord</code> (Integer): X coordinate for custom destination. The default is 0.</li>
            <li><code>ycoord</code> (Integer): Y coordinate for custom destination. The default is 0.</li>
        </ul>
    </aura:description>
</aura:documentation> 

    

    