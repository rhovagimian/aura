<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component support="BETA" extensible="true" description="A scrollable view with scroll bars and pull-to-refresh support">

    <!-- Library which holds the vanillaJS ScrollerJS and its plugins -->
    <aura:import library="ui:scrollerLib" property="lib" />
    <aura:import library="ui:scopedScroll" property="scopedScroll" />

    <!-- Exposed attributes -->
    <aura:attribute name="scroll"                type="String"  default="vertical" description="Defines the scroll direction. The string values can be either horizontal, vertical or bidirectional"/>
    <aura:attribute name="enabled"               type="Boolean" default="true"     description="Sets the default state of the scroller"/>
    <aura:attribute name="useCSSTransition"      type="Boolean"                    description="Denotes whether to use css transitions. By default scroller will decide depending on the platform"/>
    <aura:attribute name="useNativeScroller"     type="Boolean" default="false"    description="Leverage native scrolling"/>
    <aura:attribute name="preventNestedScroll"   type="Boolean" default="false"    description="(If useNative: true) Prevents any parent nested scroller to scroll by default"/>
    <aura:attribute name="preventDefaultOnMove"  type="Boolean" default="false"    description="preventDefault native events on mouse move"/>
    <aura:attribute name="debounce"              type="Boolean" default="false"    description="Separate the gesture move from the animation"/>
    <aura:attribute name="snap"                  type="Boolean" default="false"    description="Enable snap behaviour on the scroller (adds the Snap plugins to the scroller)"/>
    <aura:attribute name="endless"               type="Boolean" default="false"    description="Activates the endless plugin (gpuOptimization needs to be enable for this)"/>
    <aura:attribute name="snapType"              type="String"  default="soft"     description="Snap type. Values: sticky | soft"/>
    <aura:attribute name="plugins"               type="String"  default=""         description="The list of plugins to add"/>
    <aura:attribute name="gpuOptimization"       type="Boolean" default="false"    description="Activate Surface Mannager to create GPU accelerate surfaces for better performace."/>
    <aura:attribute name="bindEventsToScroller"  type="Boolean" default="false"    description="Binds mouse or touch events to the scroller DOM container, otherwise will be attached to the window object"/>
    <aura:attribute name="showScrollbars"        type="Boolean" default="false"    description="Enable scrollbars"/>
    <aura:attribute name="canShowMore"           type="Boolean"                    description="Whether this scroller can be invoked to show more content"/>
    <aura:attribute name="canRefresh"            type="Boolean"                    description="Whether this scroller can be invoked to refresh its content"/>
    <aura:attribute name="width"                 type="Integer"                    description="The width of the scroll area in pixels"/>
    <aura:attribute name="height"                type="Integer"                    description="The height of the scroll area in pixels"/>
    <aura:attribute name="itemWidth"             type="Integer"                    description="The width of the scroll area in pixels"/>
    <aura:attribute name="itemHeight"            type="Integer"                    description="The height of the scroll area in pixels"/>
    <aura:attribute name="class"                 type="String"                     description="A CSS style to be attached to the scroll area"/>
    <aura:attribute name="scrollContentClass"    type="String"                     description="A CSS style to be attached to the scroll content area"/>

    <aura:attribute name="minThreshold"          type="Integer" default="5"        description=""/>
    <aura:attribute name="minDirectionThreshold" type="Integer" default="1"        description=""/>
    <aura:attribute name="lockOnDirection"       type="String"                     description=""/>

     <!--Exposed scroller events -->
    <aura:attribute name="onBeforeScrollStart" type="Aura.Action" description="The action invoked before the user starts scrolling"/>  
    <aura:attribute name="onScrollStart"       type="Aura.Action" description="The action invoked when the scroll starts"/>
    <aura:attribute name="onScrollEnd"         type="Aura.Action" description="The action invoked when scroller stops"/>
    <aura:attribute name="onScrollMove"        type="Aura.Action" description="The action invoked when scrolling"/>
    <aura:attribute name="onPullToShowMore"    type="Aura.Action" description="The action invoked when the user pulls from the bottom to load more"/>
    <aura:attribute name="onPullToRefresh"     type="Aura.Action" description="The action invoked when the user pulls to refresh the scroller area"/>

     <!--Infinite loading config -->
    <aura:attribute name="infiniteLoading"             type="Boolean"     								    description="Enable Infinite loading (adds the infinite loading plugin to the scroller)"/>
    <aura:attribute name="infiniteLoadingThreshold"	   type="Integer"     								    description="Callback invoked When the user scrolls to this many pixels from the bottom"/>
    <aura:attribute name="infiniteLoadingDataProvider" type="Aura.Action" 								    description="The action invoked when the user has reached the end of the scrolling area"/>
	<aura:attribute name="infiniteLoadingAutoFillPage" type="Boolean"     default="false"               	description="Enable auto trigger data provider when there is empty space"/>
	<aura:attribute name="infiniteLoadingNoDataLabel"  type="String"      default="No more data to display" description="The text to display when no more data is available to be shown"/>
	<aura:attribute name="infiniteLoadingIdleLabel"	   type="String"      default="" 						description="The text to display when no loading is happening"/>
    <aura:attribute name="infiniteLoadingLoadingLabel" type="String"	  default="Loading more..." 		description="The text to display while the infinite loading callback is invoked"/>
    <aura:attribute name="infiniteLoadingTemplate"     type="Aura.Component[]"                              description="If set this component is used to display loading more data instead of the default markup"/>

    <!--Labels pullToShowMore -->
    <aura:attribute name="pullToShowMoreClick"    type="String" default="Tap to show more"           description="The text before the user pulls clicks to refresh content"/>
    <aura:attribute name="pullToShowMorePull"     type="String" default="Pull up to show more..."    description="The text before the user pulls to show more content"/>
    <aura:attribute name="pullToShowMoreRelease"  type="String" default="Release to show more..."    description="The text when the user pulls to show more content in the scroller area"/>
    <aura:attribute name="pullToShowMoreUpdating" type="String" default="Updating..."                description="The text to display while the scroller component is updating"/>
    <aura:attribute name="pullToShowMoreSubtitle" type="String" default= ""                          description="The text to display in the bottom cell"/>
    <aura:attribute name="pullToShowMoreError"    type="String" default="Error on Pull to load more" description="The text to display while the scroller component is updating"/>

    <!--Labels pullToLoadMore -->
    <aura:attribute name="pullToRefreshClick"     type="String" default="Tap to refresh"           description="The text to display in the top cell before the user clicks to refresh the page"/>
    <aura:attribute name="pullToRefreshPull"      type="String" default="Pull down to refresh..."  description="The text to display in the top cell before the user pulls to refresh the page"/>
    <aura:attribute name="pullToRefreshRelease"   type="String" default="Release to refresh..."    description="The text to display in the revealed area above the scroller"/>
    <aura:attribute name="pullToRefreshUpdating"  type="String" default="Loading..."               description="The text to display while the scroller component is updating"/>
    <aura:attribute name="pullToRefreshError"     type="String" default="Error on Pull to refresh" description="The text to display in the top cell when the user pulls and there is an error"/>
    <aura:attribute name="pullToRefreshSubtitle"  type="String" default=""                         description="The text to display in the top cell when the user pulls the scroller area to refresh the content"/>

    <!--Labels Scroll Buttons -->
    <aura:attribute name="scrollButtonUp"         type="String" default="Page Up"                  description="The text to display in the Page Up button." />
    <aura:attribute name="scrollButtonDown"       type="String" default="Page Down"                description="The text to display in the Page Down button." />
    <aura:attribute name="scrollButtonLeft"       type="String" default="Page Left"                  description="The text to display in the Page Left button." />
    <aura:attribute name="scrollButtonRight"      type="String" default="Page Right"                  description="The text to display in the Page Right button." />
    
    <aura:attribute name="supportVoiceOver" type="Boolean" default="true" description="If set to true and Global.isVoiceOver is also true, user can scroll the content by clicking on the up or down button." />
   
    <aura:registerEvent name="scrollTo" type="ui:scrollTo"     description="The event fired when the scroller should move to a new destination"/>
    <aura:handler       name="scrollTo" action="{!c.scrollTo}" description="Catches the event fired when the scroller should move to a new destination"/>  

    <aura:registerEvent name="scrollBy" type="ui:scrollBy"     description="The event fired when the scroller should move to a new destination relative to its current position"/>
    <aura:handler       name="scrollBy" action="{!c.scrollBy}" description="Catches the event fired when the scroller should move to a new destination relative to its current position"/>

    <aura:handler       name="change" value="{!v.canRefresh}" action="{!c.handleCanRefreshChange}" description="Handler called when the canShowMore attribute changes"/>
    <aura:handler       name="change" value="{!v.canShowMore}" action="{!c.handleCanShowMoreChange}" description="Handler called when the canShowMore attribute changes"/>
    <aura:handler       name="change" value="{!$Global.isVoiceOver}" action="{!c.handleVoiceOverChange}" description="Handler called when Global.isVoiceOver changes." />

    <ui:resizeObserver onresize="{!c.refresh}"/>
    <aura:handler name="init" value="{!this}" action="{!c.init}"/>
    
    <div aura:id="scrollWrapper" class="{!v.class}" style="{! (v.width ? ('width: ' + v.width + 'px;'): '') + (v.height? ('height: ' + v.height + 'px') : '') }">
        <div aura:id="scrollContent" class="{!v.scrollContentClass}">
            {!v.body}
            {!v.infiniteLoadingTemplate}
        </div>
    </div>
</aura:component>
