<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component access="PRIVILEGED" extends="ui:interactive" extensible="true" support="beta"
    implements="ui:autocompleteOptionTemplate" 
    description="This component represents list options in an ui:autocomplete component. The options are displayed when an input keyword matches an item in the data provider.">
    
    <aura:attribute name="displayText" type="String" description="The displayed text string for this option."/>
    <aura:attribute name="label" access="PRIVILEGED" type="String" required="true" description="The text displayed on the component. This attribute's value is used to do matching."/>
    <aura:attribute name="theme" type="String" default="default" description="Theme to apply to this component."/>
    <aura:attribute name="domId" type="String" default="" description="Id of the option component's anchor"/>
    
    <aura:registerEvent name="listHighlight" type="ui:listHighlight" description="The event fired when a list option is highlighted, e.g. keyboard navigation."/>
    
    <aura:handler name="init" value="{!this}" action="{!c.init}"/>
    <aura:handler name="mouseover" action="{!c.handleMouseover}"/>
    <aura:handler name="mouseout" action="{!c.handleMouseout}"/>

    <li role="presentation" class="{!'lookup__item ' + v.class + ' ' + v.theme + (v.visible == false ? ' invisible' : '') + (v.highlighted == false ? '' : ' highlighted')}">
        <a id="{!v.domId}" class="{!v.class}" aura:id="option" role="option">
            <aura:renderIf isTrue="{!v.body.length == 0}">
                {!v.displayText}
                <aura:set attribute="else">
                    {!v.body}
                </aura:set>
            </aura:renderIf>
        </a>
    </li>
</aura:component>