<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component
    extends="ui:abstractList"
    implements="ui:autocompleteListInterface"
    support="proto"
    description="This component is used in ui:autocomplete to provide a list of options to the input component.To customize the list option behavior, use the selectListOption, listHighlight, and updateAriaAttributes events.">

    <aura:attribute access="PRIVATE" name="privateItems" type="Object[]"/>
    <aura:attribute name="propertyToMatch" type="String" default="label" description="The property name in the data object which is used to match typing in the input field."/>
    <aura:attribute name="theme" type="String" default="default" description="Theme to apply to this component."/>
    <aura:attribute name="matchFunc" type="Aura.Action" description="Overrides default list item update behavior to allow custom text matching."/>
    <aura:attribute name="footerSelected" type="boolean" default="false" description="Specifies whether the footer is selected. The default is false."/>
    <aura:attribute name="headerSelected" type="boolean" default="false" description="Specifies whether the header is selected. The default is false."/>
    <aura:attribute name="listHeader" type="Aura.Component[]" description="A facet above the rendered list, for use as a list header"/>
    <aura:attribute name="listFooter" type="Aura.Component[]" description="A facet below the rendered list, for use as a list footer"/>
    <aura:attribute name="showListHeader" type="Boolean" default="true" description="Specifies whether the list header is visible. The default is true."/>
    <aura:attribute name="showListFooter" type="Boolean" default="true" description="Specifies whether the list footer is visible. The default is true."/>
    <aura:attribute name="setDefaultHighlight" type="boolean" default="true" description="Specifies whether the first option item should be highlighted by default. The default is true."/>
    <aura:attribute name="listReferenceComponent" type="Aura.Component[]" description="Sets the component that the list is displayed under"/>
    <aura:attribute name="loadingIndicatorDelay" type="Integer" default="300" description="Amount of time (ms) to delay before displaying the loading indicator when fetching data. The default is 300ms."/>
    <aura:attribute name="disableMatch" type="boolean" default="false" description="Indicates whether to disable keyword matching. The default is false."/>
    <aura:attribute name="showEmptyList" type="boolean" default="false" description="Indicates if an empty list is visible when the keyword attribute is empty. The default is false."/>

    <aura:registerEvent name="matchDone" type="ui:matchDone" description="The event fired when the matching is done."/>
    <aura:registerEvent name="selectListOption" type="ui:selectListOption" description="The event fired when a list option is selected."/>
    <aura:registerEvent name="listExpand" type="ui:autocompleteListExpand" description="The event fired when the list is made visible"/>
    <aura:registerEvent name="listCollapse" type="ui:autocompleteListCollapse" description="The event fired when the list is made invisible"/>

    <aura:handler name="init" value="{!this}" action="{!c.init}"/>
    <aura:handler name="change" value="{!v.visible}" action="{!c.visibleChange}"/>
    <aura:handler name="listHighlight" action="{!c.handleListHighlight}"/>
    <aura:handler name="matchText" action="{!c.matchText}"/>
    <aura:handler name="pressOnHighlighted" action="{!c.handlePressOnHighlighted}"/>

    <aura:set attribute="header">
        <aura:if isTrue="{!!empty(v.listHeader)}"><div onclick="{!c.handleHeaderClick}" onmousedown="{!c.handleMouseDown}" class="{!v.showListHeader?'':'hidden'}">{!v.listHeader}</div></aura:if>
    </aura:set>
    <aura:set attribute="footer">
        <aura:if isTrue="{!!empty(v.listFooter)}"><div onclick="{!c.handleFooterClick}" onmousedown="{!c.handleMouseDown}" class="{!v.showListFooter?'':'hidden'}">{!v.listFooter}</div></aura:if>
    </aura:set>

    <ul aura:id="list" class="{!'lookup__list ' + (v.visible ? ' visible' : '')}" role="presentation" onclick="{!c.handleClick}" onmousedown="{!c.handleMouseDown}">
        <aura:iteration aura:id="iter" items="{!v.privateItems}" var="{!v.itemVar}" body="{!v.itemTemplate}"/>
    </ul>
</aura:component>